{"ast":null,"code":"import axios from \"axios\";\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS } from \"../Constants/ProductConstants\";\nexport const listProduct = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\n\n// // SINGLE PRODUCT\n// export const listProductDetails = (id) => async (dispatch) => {\n//   try {\n//     dispatch({ type: PRODUCT_DETAILS_REQUEST });\n//     const { data } = await axios.get(`/api/products/${id}`);\n//     dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\n//   } catch (error) {\n//     dispatch({\n//       type: PRODUCT_DETAILS_FAIL,\n//       payload:\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message,\n//     });\n//   }\n// };\n\n// // PRODUCT REVIEW CREATE\n// export const createProductReview =\n//   (productId, review) => async (dispatch, getState) => {\n//     try {\n//       dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\n\n//       const {\n//         userLogin: { userInfo },\n//       } = getState();\n\n//       const config = {\n//         headers: {\n//           \"Content-Type\": \"application/json\",\n//           Authorization: `Bearer ${userInfo.token}`,\n//         },\n//       };\n\n//       await axios.post(`/api/products/${productId}/review`, review, config);\n//       dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\n//     } catch (error) {\n//       const message =\n//         error.response && error.response.data.message\n//           ? error.response.data.message\n//           : error.message;\n//       if (message === \"Not authorized, token failed\") {\n//         dispatch(logout());\n//       }\n//       dispatch({\n//         type: PRODUCT_CREATE_REVIEW_FAIL,\n//         payload: message,\n//       });\n//     }\n//   };","map":{"version":3,"names":["axios","PRODUCT_LIST_FAIL","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","listProduct","dispatch","type","data","get","payload","error","response","message"],"sources":["C:/Users/jayma/OneDrive/Desktop/jrq/frontend/src/Redux/Actions/ProductActions.js"],"sourcesContent":["import axios from \"axios\";\r\nimport { PRODUCT_LIST_FAIL, PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS} from \"../Constants/ProductConstants\";\r\n\r\nexport const listProduct = () =>  async (dispatch) => {\r\n    try {\r\n\r\n      dispatch({ type: PRODUCT_LIST_REQUEST });\r\n\r\n      const { data } = await axios.get(\"/api/products\");\r\n\r\n      dispatch({ type: PRODUCT_LIST_SUCCESS, payload: data });\r\n      \r\n    } catch (error) {\r\n      dispatch({\r\n        type: PRODUCT_LIST_FAIL,\r\n        payload:\r\n          error.response && error.response.data.message\r\n            ? error.response.data.message\r\n            : error.message,\r\n      });\r\n    }\r\n  };\r\n\r\n// // SINGLE PRODUCT\r\n// export const listProductDetails = (id) => async (dispatch) => {\r\n//   try {\r\n//     dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n//     const { data } = await axios.get(`/api/products/${id}`);\r\n//     dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data });\r\n//   } catch (error) {\r\n//     dispatch({\r\n//       type: PRODUCT_DETAILS_FAIL,\r\n//       payload:\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message,\r\n//     });\r\n//   }\r\n// };\r\n\r\n// // PRODUCT REVIEW CREATE\r\n// export const createProductReview =\r\n//   (productId, review) => async (dispatch, getState) => {\r\n//     try {\r\n//       dispatch({ type: PRODUCT_CREATE_REVIEW_REQUEST });\r\n\r\n//       const {\r\n//         userLogin: { userInfo },\r\n//       } = getState();\r\n\r\n//       const config = {\r\n//         headers: {\r\n//           \"Content-Type\": \"application/json\",\r\n//           Authorization: `Bearer ${userInfo.token}`,\r\n//         },\r\n//       };\r\n\r\n//       await axios.post(`/api/products/${productId}/review`, review, config);\r\n//       dispatch({ type: PRODUCT_CREATE_REVIEW_SUCCESS });\r\n//     } catch (error) {\r\n//       const message =\r\n//         error.response && error.response.data.message\r\n//           ? error.response.data.message\r\n//           : error.message;\r\n//       if (message === \"Not authorized, token failed\") {\r\n//         dispatch(logout());\r\n//       }\r\n//       dispatch({\r\n//         type: PRODUCT_CREATE_REVIEW_FAIL,\r\n//         payload: message,\r\n//       });\r\n//     }\r\n//   };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,iBAAiB,EAAEC,oBAAoB,EAAEC,oBAAoB,QAAO,+BAA+B;AAE5G,OAAO,MAAMC,WAAW,GAAGA,CAAA,KAAO,MAAOC,QAAQ,IAAK;EAClD,IAAI;IAEFA,QAAQ,CAAC;MAAEC,IAAI,EAAEJ;IAAqB,CAAC,CAAC;IAExC,MAAM;MAAEK;IAAK,CAAC,GAAG,MAAMP,KAAK,CAACQ,GAAG,CAAC,eAAe,CAAC;IAEjDH,QAAQ,CAAC;MAAEC,IAAI,EAAEH,oBAAoB;MAAEM,OAAO,EAAEF;IAAK,CAAC,CAAC;EAEzD,CAAC,CAAC,OAAOG,KAAK,EAAE;IACdL,QAAQ,CAAC;MACPC,IAAI,EAAEL,iBAAiB;MACvBQ,OAAO,EACLC,KAAK,CAACC,QAAQ,IAAID,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GACzCF,KAAK,CAACC,QAAQ,CAACJ,IAAI,CAACK,OAAO,GAC3BF,KAAK,CAACE;IACd,CAAC,CAAC;EACJ;AACF,CAAC;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}